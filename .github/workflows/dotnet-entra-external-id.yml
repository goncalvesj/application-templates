name: CI/CD - DotNet Entra External ID

on:  
  push:
    branches:
      - master
    paths:
      - 'DotNet-EntraExternal-ID/**'
  workflow_dispatch:

env:
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  WORKING_DIRECTORY: DotNet-EntraExternal-ID

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Build .Net App
        uses: ./.github/actions/build-dotnet
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/Net.API
          configuration: ${{ env.CONFIGURATION }}
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    
    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v2.2.1
      
    # - name: Build the Docker image
    #   run: |
    #     docker buildx build \
    #     -f $APP_CONTEXT/NetCore.Angular.AzureB2C/Dockerfile \
    #     --output type=docker,dest=${{ env.IMAGE_NAME }}.tar -t ${{ env.IMAGE_NAME }}:build \
    #     $APP_CONTEXT

    # - name: Login to GitHub Packages
    #   uses: docker/login-action@v2
    #   with:
    #     registry: ghcr.io
    #     username: ${{ github.actor }}
    #     password: ${{ secrets.GITHUB_TOKEN }}

    # - name: Load Image and Tag
    #   run: |
    #     TAG_FULLNAME=ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}
    #     docker load --input ${{ env.IMAGE_NAME }}.tar
    #     docker tag ${{ env.IMAGE_NAME }}:build $TAG_FULLNAME:latest
    #     docker tag ${{ env.IMAGE_NAME }}:build $TAG_FULLNAME:$GITHUB_RUN_ID
    #     docker push $TAG_FULLNAME:latest
    #     docker push $TAG_FULLNAME:$GITHUB_RUN_ID

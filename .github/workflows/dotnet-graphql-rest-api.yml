name: DotNet-GraphQL-Rest-APIs-Pipeline

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Reason'
        required: true
        default: 'Testing'
  push:
    branches: [ master, gh-actions ]
    # paths:
    #   - 'DotNet-GraphQL-Rest-APIs/*'
  pull_request:
    branches: [ master ]
    # paths:
    #   - 'DotNet-GraphQL-Rest-APIs/*'

env:
  GRAPHQL_IMAGE_NAME: "sw-graphql"
  REST_IMAGE_NAME: "sw-rest"

permissions:
      id-token: write
      contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    # - name: Azure Login
    #   uses: Azure/login@v1
    #   with:
    #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
    #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
    #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # - name: Azure ACR Login
    #   run: | 
    #     az acr login -n ${{ secrets.AZURE_ACR_NAME }}

    - name: Set Envs
      run: |
        echo "GRAPH_IMAGE=$(echo ${{ secrets.AZURE_ACR_NAME }}/$GRAPHQL_IMAGE_NAME:$GITHUB_RUN_ID)" >> $GITHUB_ENV
        echo "REST_IMAGE=$(echo ${{ secrets.AZURE_ACR_NAME }}/$REST_IMAGE_NAME:$GITHUB_RUN_ID)" >> $GITHUB_ENV

    # - name: Build and Push the GraphQL Docker image
    #   run: |
    #     cd DotNet-GraphQL-Rest-APIs
    #     docker build . -f GraphQL.API/Dockerfile -t $GRAPH_IMAGE
  
  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    # - name: Azure Login
    #   uses: Azure/login@v1
    #   with:
    #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
    #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
    #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    # - name: Azure ACR Login
    #   run: | 
    #     az acr login -n ${{ secrets.AZURE_ACR_NAME }}

    - name: Test Envs
      run: |
        echo "${{ env.GRAPH_IMAGE }}"

    # - name: Build and Push the GraphQL Docker image
    #   run: |
    #     docker push $GRAPH_IMAGE

    # - name: Build and Push the REST Docker image
    #   run: |
    #     cd DotNet-GraphQL-Rest-APIs
    #     docker build . -f Rest.API/Dockerfile -t ghcr.io/$GITHUB_REPOSITORY_OWNER/$REST_IMAGE_NAME:$GITHUB_RUN_ID
    #     docker push ghcr.io/$GITHUB_REPOSITORY_OWNER/$REST_IMAGE_NAME:$GITHUB_RUN_ID